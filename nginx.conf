user nginx;
worker_processes auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
worker_rlimit_nofile 150000;

#load_module modules/ngx_http_headers_more_filter_module.so;

events {
    worker_connections  5000;
    multi_accept on;
    use epoll;
}


stream {
    log_format  main  '$remote_addr - [$time_local] '
                        '$protocol $status $bytes_sent $bytes_received '
                        '$session_time $upstream_addr '
                        '"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';                        

	map $time_iso8601 $logdate {
        '~^(?<ymd>\d{4}-\d{2}-\d{2})'   $ymd;
        default             		'nodate';
    }
	
	#include /etc/nginx/conf.d/stream/*.conf;
	
}


http {
	
    server_tokens off;
    server_names_hash_bucket_size 256;
#    more_clear_headers 'X-Powered-By';
#    more_clear_headers 'Server';

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    #msie_padding off;
    keepalive_timeout 65; #keepalive 時間，60秒算是正常數值
    reset_timedout_connection on;
    types_hash_max_size 2048;
    client_max_body_size 2048k;
    client_body_buffer_size 32k;
    client_body_in_single_buffer on;
    client_body_timeout 180s;
    client_header_timeout 180s;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '"$request_body"';
                      
                      
	map $time_iso8601 $logdate {
        '~^(?<ymd>\d{4}-\d{2}-\d{2})'   $ymd;
        default             		'nodate';
    }


    #access_log  /var/log/nginx/access_${logdate}.log main;
    #access_log  /var/log/nginx/access.log  main;
    access_log off;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_buffers 4 4k; #gzip可用的記憶體比例
    gzip_comp_level 2; #1~9越小壓縮比越高，但CPU Loading也越重
    gzip_min_length 1k; #允許壓縮頁面最小位元，至少小於1k避免越壓越大
    gzip_http_version 1.1; #指定 HTTP1.1 才使用gzip壓縮，避免較舊的瀏覽器不支援
    gzip_types text/plain application/x-javascript text/css application/xml;
    gzip_disable "msie6";


    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }


upstream tonyhsu-server {
        server www.tonyhsu.idv.tw fail_timeout=0;
    }

server
{
    listen              1111;
    access_log          /var/log/nginx/access_${logdate}_officegit-server.log main;
    error_log           /var/log/nginx/error_officegit-server.log warn;

    location / {
    root /usr/share/nginx/html;
    proxy_pass http://tonyhsu-server/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header X-Real-IP $remote_addr;                       # ? å…¥ X-Real-IP Header
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;   # ? å…¥ X-Forwarded-For Header
    proxy_redirect off;
        
    }
}

}
